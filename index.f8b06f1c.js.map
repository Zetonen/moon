{"mappings":"AAAO,MAAMA,EAAO,CAClBC,KAAMC,SAASC,cAAc,cAC7BC,KAAMF,SAASC,cAAc,e,ICmB/BE,EAAe,C,KAXFC,IACX,IACE,MAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAZ/B,WAYuD,GACtEJ,EAAcK,KAAKN,GACnB,MAAMO,EAAkBL,KAAKM,UAAUP,GACvCG,aAAaK,QAfE,QAekBF,E,CACjC,MAAOG,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAfhC,KACX,IACE,MAAML,EAAkBH,aAAaC,QAJtB,SAKf,OAA2B,OAApBE,OAA2BM,EAAYX,KAAKC,MAAMI,E,CACzD,MAAOG,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,ICLtC,SAASE,GAAWC,SAAEA,EAAQC,SAAEA,EAAQC,GAAEA,IAC/C,MAAMC,EAAS,kFACmCD,kCACxCF,oBACDC,iBAGTtB,EAAKI,KAAKqB,mBAAmB,YAAaD,E,CCY5CxB,EAAKC,KAAKyB,iBAAiB,UClBpB,SAAsBC,GAC3BA,EAAEC,iBACF,MAAMC,EAAa,CACjBN,GAAIO,KAAKC,OAGX,IAAIC,SAASL,EAAEM,eAAeC,SAAQ,CAAC5B,EAAO6B,KAC5CN,EAAWM,GAAQ7B,CAAK,IAG1BD,EAAgB+B,KAAKP,GAErBT,EAAWS,GACXF,EAAEM,cAAcI,O,ICbX,WACL,MAAMC,EAAQjC,EAAgBkC,OAE9B,IAAKD,EACH,OAGF,MAAMd,EAASc,EACZE,KAAI,EAACnB,SAAEA,EAAQC,SAAEA,EAAQC,GAAEA,KACnB,kFACuCA,kCACxCF,oBACDC,mBAGNmB,KAAK,IAERzC,EAAKI,KAAKqB,mBAAmB,YAAaD,E,CFK5C","sources":["src/js/refs.js","src/js/localStorage.js","src/js/renderCard.js","src/index.js","src/js/onSubmitForm.js","src/js/renderCards.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('#task-form'),\n  list: document.querySelector('#task-list'),\n};\n\n","const LOCAL__KEY = 'notes';\n\nconst load = () => {\n  try {\n    const serializedState = localStorage.getItem(LOCAL__KEY);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\nconst save = value => {\n  try {\n    const arrFormValues = JSON.parse(localStorage.getItem(LOCAL__KEY)) || [];\n    arrFormValues.push(value);\n    const serializedState = JSON.stringify(arrFormValues);\n    localStorage.setItem(LOCAL__KEY, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n};\n","import { refs } from './refs';\n\nexport function renderCard({ taskName, taskText, id }) {\n  const markup = `<li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\" data-id=\"${id}\">Удалить</button>\n      <h3>${taskName}</h3>\n      <p>${taskText}</p>\n  </li>`;\n\n  refs.list.insertAdjacentHTML('beforeend', markup);\n}\n","/**\n * Створи список справ.\n * На сторінці є два інпути які має вводиться назва і текст задачі.\n * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n *\n * Розмітка картки задачі\n * <li class=\"task-list-item\">\n *     <button class=\"task-list-item-btn\">Удалить</button>\n *     <h3>Заголовок</h3>\n *     <p>Текст</p>\n * </li>\n *\n * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n * прибрати завдання зі списку.\n * Список із завданнями має бути доступним після перезавантаження сторінки.\n */\nimport { refs } from './js/refs';\nimport localStorageApi from './js/localStorage';\nimport { onSubmitForm } from './js/onSubmitForm';\nimport { renderCards } from \"./js/renderCards\";\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\n\n\nrenderCards();\n","import localStorageApi from './localStorage';\nimport { renderCard } from './renderCard';\n\nexport function onSubmitForm(e) {\n  e.preventDefault();\n  const formValues = {\n    id: Date.now(),\n  };\n\n  new FormData(e.currentTarget).forEach((value, name) => {\n    formValues[name] = value;\n  });\n\n  localStorageApi.save(formValues);\n\n  renderCard(formValues);\n  e.currentTarget.reset();\n}\n","import localStorageApi from './localStorage';\nimport { refs } from './refs';\n\nexport function renderCards() {\n  const cards = localStorageApi.load();\n\n  if (!cards) {\n    return;\n  }\n\n  const markup = cards\n    .map(({ taskName, taskText, id }) => {\n      return `<li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\" data-id=\"${id}\">Удалить</button>\n      <h3>${taskName}</h3>\n      <p>${taskText}</p>\n  </li>`;\n    })\n    .join('');\n\n  refs.list.insertAdjacentHTML('beforeend', markup);\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","list","$2338c8cd734f85a6$export$2e2bcd8739ae039","value","arrFormValues","JSON","parse","localStorage","getItem","push","serializedState","stringify","setItem","error","console","message","undefined","$b62d4e3fbd34d2e3$export$e9aece8f6847aae6","taskName","taskText","id","markup","insertAdjacentHTML","addEventListener","e","preventDefault","formValues","Date","now","FormData","currentTarget","forEach","name","save","reset","cards","load","map","join"],"version":3,"file":"index.f8b06f1c.js.map"}