{"mappings":"YAAO,IAAMA,EAAO,CAClBC,KAAMC,SAASC,cAAc,cAC7BC,KAAMF,SAASC,cAAc,eCFzBE,EAAa,QAqBnBC,EAAe,CACbC,KAZW,SAAAC,GACX,IACE,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQR,KAAgB,GACtEI,EAAcK,KAAKN,GACnB,IAAMO,EAAkBL,KAAKM,UAAUP,GACvCG,aAAaK,QAAQZ,EAAYU,E,CACjC,MAAOG,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAM3CC,KArBW,WACX,IACE,IAAMN,EAAkBH,aAAaC,QAAQR,GAC7C,OAA2B,OAApBU,OAA2BO,EAAYZ,KAAKC,MAAMI,E,CACzD,MAAOG,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,ICY7CpB,EAAKC,KAAKsB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAa,GAEnB,IAAIC,SAASH,EAAEI,eAAeC,SAAQ,SAACrB,EAAOsB,GAC5CJ,EAAWI,GAAQtB,C,IAGrBF,EAAgBC,KAAKmB,E","sources":["src/js/refs.js","src/js/localStorage.js","src/index.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('#task-form'),\n  list: document.querySelector('#task-list'),\n};\n\n","const LOCAL__KEY = 'notes';\n\nconst load = () => {\n  try {\n    const serializedState = localStorage.getItem(LOCAL__KEY);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\nconst save = value => {\n  try {\n    const arrFormValues = JSON.parse(localStorage.getItem(LOCAL__KEY)) || [];\n    arrFormValues.push(value);\n    const serializedState = JSON.stringify(arrFormValues);\n    localStorage.setItem(LOCAL__KEY, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n};\n","/**\n * Створи список справ.\n * На сторінці є два інпути які має вводиться назва і текст задачі.\n * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n *\n * Розмітка картки задачі\n * <li class=\"task-list-item\">\n *     <button class=\"task-list-item-btn\">Удалить</button>\n *     <h3>Заголовок</h3>\n *     <p>Текст</p>\n * </li>\n *\n * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n * прибрати завдання зі списку.\n * Список із завданнями має бути доступним після перезавантаження сторінки.\n */\nimport { refs } from './js/refs';\nimport localStorageApi from './js/localStorage';\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const formValues = {};\n\n  new FormData(e.currentTarget).forEach((value, name) => {\n    formValues[name] = value;\n  });\n\n  localStorageApi.save(formValues);\n}\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","list","$0aa9cd13c14a6e1e$var$LOCAL__KEY","$0aa9cd13c14a6e1e$export$2e2bcd8739ae039","save","value","arrFormValues","JSON","parse","localStorage","getItem","push","serializedState","stringify","setItem","error","console","message","load","undefined","addEventListener","e","preventDefault","formValues","FormData","currentTarget","forEach","name"],"version":3,"file":"index.db138c5b.js.map"}